arr_time = arr_time%/%100*60 + arr_time%%100,
rel = air_time/(arr_time-dep_time))
dep_time = dep_time%/%100*60 + dep_time%%100,
flights %>%
filter(!is.na(air_time)) %>%
mutate(
dep_time = dep_time%/%100*60 + dep_time%%100,
arr_time = arr_time%/%100*60 + arr_time%%100,
rel = air_time/(arr_time-dep_time)) %>%
select(rel, everything()) %>%
arrange(rel)
flights %>%
filter(!is.na(air_time)) %>%
select(air_time, dep_time, arr_time) %>%
flights %>%
flights %>%
filter(!is.na(air_time)) %>%
select(air_time, dep_time, arr_time) %>%
mutate(
dep_time = dep_time%/%100*60 + dep_time%%100,
arr_time = arr_time%/%100*60 + arr_time%%100,
diff = arr_time-dep_time)
flights %>%
filter(!is.na(air_time)) %>%
select(air_time, dep_time, arr_time) %>%
mutate(
dep_time = dep_time%/%100*60 + dep_time%%100,
arr_time = arr_time%/%100*60 + arr_time%%100,
diff = arr_time-dep_time)
flights %>%
filter(!is.na(air_time)) %>%
select(air_time, dep_time, arr_time) %>%
mutate(
dep_time = dep_time%/%100*60 + dep_time%%100,
arr_time = arr_time%/%100*60 + arr_time%%100,
diff = arr_time-dep_time) %>%
arrange(diff)
flights %>%
filter(!is.na(air_time)) %>%
select(air_time, dep_time, arr_time) %>%
mutate(
dep_time_min = dep_time%/%100*60 + dep_time%%100,
arr_time_min = arr_time%/%100*60 + arr_time%%100,
diff = arr_time-dep_time) %>%
arrange(diff)
flights %>%
filter(!is.na(air_time)) %>%
select(air_time, day, dep_time, arr_time) %>%
mutate(
dep_time_min = dep_time%/%100*60 + dep_time%%100,
arr_time_min = arr_time%/%100*60 + arr_time%%100,
diff = arr_time-dep_time) %>%
arrange(diff)
flights %>%
filter(!is.na(air_time)) %>%
select(air_time, dep_time, arr_time) %>%
mutate(
dep_time_min = dep_time%/%100*60 + dep_time%%100,
arr_time_min = arr_time%/%100*60 + arr_time%%100,
diff = arr_time_min-dep_time_min) %>%
arrange(diff)
# Los primeros 10 mostrados son los vuelos que llegaron con más antelación a sus destinos
library(lubridate)
flights %>%
filter(!is.na(air_time)) %>%
select(air_time, dep_time, arr_time) %>%
mutate(
dep_time_min = dep_time%/%100*60 + dep_time%%100,
arr_time_min = arr_time%/%100*60 + arr_time%%100,
diff = arr_time_min-dep_time_min) %>%
filter(diff<0) %>%
mutate(diff = arr_time_min + 1440 - dep_time_min) %>%
arrange(diff)
flights %>%
filter(!is.na(air_time)) %>%
select(air_time, dep_time, arr_time) %>%
mutate(
dep_time_min = dep_time%/%100*60 + dep_time%%100,
arr_time_min = arr_time%/%100*60 + arr_time%%100,
diff = if(arr_time_min-dep_time_min >= 0){
arr_time_min - dep_time_min
}else{
arr_time_min + 1440 - dep_time_min
}) %>%
arrange(diff)
flights %>%
filter(!is.na(air_time)) %>%
select(air_time, dep_time, arr_time) %>%
mutate(
dep_time_min = dep_time%/%100*60 + dep_time%%100,
arr_time_min = arr_time%/%100*60 + arr_time%%100,
diff = if(arr_time_min-dep_time_min >= 0){
diff = arr_time_min - dep_time_min
}else{
diff = arr_time_min + 1440 - dep_time_min
}) %>%
arrange(diff)
flights %>%
filter(!is.na(air_time)) %>%
select(air_time, dep_time, arr_time) %>%
mutate(
dep_time_min = dep_time%/%100*60 + dep_time%%100,
arr_time_min = arr_time%/%100*60 + arr_time%%100,
diff = ifelse(arr_time_min-dep_time_min >= 0, arr_time_min - dep_time_min,
arr_time_min + 1440 - dep_time_min)) %>%
arrange(diff)
dep_time_min = dep_time%/%100*60 + dep_time%%100,
flights %>%
filter(!is.na(air_time)) %>%
select(air_time, dep_time, arr_time) %>%
mutate(
dep_time_min = dep_time%/%100*60 + dep_time%%100,
arr_time_min = arr_time%/%100*60 + arr_time%%100,
diff = ifelse(arr_time_min-dep_time_min >= 0, arr_time_min - dep_time_min,
arr_time_min + 1440 - dep_time_min),
cociente = air_time/diff) %>%
arrange(cociente)
flights %>%
group_by(dest, carrier) %>%
summarise(
n()
)
flights %>%
group_by(dest, carrier) %>%
summarise(
count = n()
) %>%
filter(count >= 2)
flights %>%
group_by(dest, carrier) %>%
summarise(
carriers = n_distinct(carrier)
)
flights %>%
group_by(dest) %>%
summarise(
carriers = n_distinct(carrier)
)
flights %>%
group_by(dest) %>%
summarise(
carriers = n_distinct(carrier)
) %>%
filter(carriers >= 2)
flights %>%
group_by(dest) %>%
summarise(
carriers = n_distinct(carrier)
) %>%
filter(carriers >= 2) %>%
ungroup()
flights %>%
group_by(dest) %>%
summarise(
carriers = n_distinct(carrier)
) %>%
filter(carriers >= 2) -> best_dest
flights %>%
filter(dest == best_dest$dest)
flights %>%
filter(dest %in% best_dest$dest)
flights
flights %>%
filter(dest %in% best_dest$dest) %>%
select(dest, carrier, air_time)
flights %>%
filter(dest %in% best_dest$dest,
is.na(air_time)) %>%
select(dest, carrier, air_time) %>%
group_by(dest) %>%
mutate(rank = dense_rank(air_time))
flights %>%
filter(dest %in% best_dest$dest,
!is.na(air_time)) %>%
select(dest, carrier, air_time) %>%
group_by(dest) %>%
mutate(rank = dense_rank(air_time))
flights %>%
filter(dest %in% best_dest$dest,
!is.na(air_time)) %>%
select(dest, carrier, air_time) %>%
group_by(dest) %>%
mutate(rank = dense_rank(air_time)) %>%
arrange(rank)
flights %>%
filter(dest %in% best_dest$dest,
!is.na(air_time)) %>%
select(dest, carrier, air_time) %>%
group_by(dest, carrier) %>%
mutate(rank = dense_rank(air_time)) %>%
arrange(rank)
flights %>%
filter(dest %in% best_dest$dest,
!is.na(air_time)) %>%
select(dest, carrier, air_time) %>%
group_by(dest, carrier) %>%
mutate(rank = dense_rank(air_time)) %>%
filter(rank %in% range(rank))
flights %>%
filter(dest %in% best_dest$dest,
!is.na(air_time)) %>%
select(dest, carrier, air_time) %>%
group_by(dest, carrier) %>%
mutate(rank = dense_rank(air_time)) %>%
filter(rank %in% range(rank)) %>%
arrange(rank)
flights %>%
filter(dest %in% best_dest$dest,
!is.na(air_time)) %>%
select(dest, carrier, air_time) %>%
group_by(dest) %>%
mutate(rank = dense_rank(air_time)) %>%
filter(rank %in% range(rank)) %>%
arrange(rank)
flights %>%
filter(dest %in% best_dest$dest,
!is.na(air_time)) %>%
select(dest, carrier, air_time) %>%
group_by(dest) %>%
mutate(rank = dense_rank(air_time)) %>%
filter(rank %in% range(rank)) %>%
arrange(dest,rank)
not_cancelled %>% # Recordemos que en este dataset no hay NAs en delays
group_by(carrier) %>%
mutate(rank = min_rank(dep_time)) %>%
filter(rank %in% range(rank))
# * Medidas de Posición
not_cancelled %>% # Recordemos que en este dataset no hay NAs en delays
group_by(carrier) %>%
mutate(rank = min_rank(dep_time)) %>%
filter(rank %in% range(rank)) -> rank # Ranking por compañías
rank
# * Medidas de Posición
not_cancelled %>% # Recordemos que en este dataset no hay NAs en delays
group_by(carrier) %>%
mutate(rank = min_rank(dep_time)) %>%
filter(rank %in% range(rank)) -> View(rank) # Ranking por compañías
# * Medidas de Posición
not_cancelled %>% # Recordemos que en este dataset no hay NAs en delays
group_by(carrier) %>%
mutate(rank = min_rank(dep_time)) %>%
filter(rank %in% range(rank)) -> View(rank) # Ranking por compañías
rank
View(rank)
flights %>%
group_by(dest) %>%
summarise(
carriers = n_distinct(carrier)
) %>%
filter(carriers >= 2)
flights %>%
filter(dest %in% best_dest$dest,
!is.na(air_time)) %>%
select(dest, carrier, air_time) %>%
group_by(dest) %>%
mutate(rank = dense_rank(air_time)) %>%
filter(rank %in% range(rank)) %>%
arrange(dest,rank)
flights %>%
filter(dest %in% best_dest$dest,
!is.na(air_time)) %>%
select(dest, carrier, air_time) %>%
group_by(dest) %>%
mutate(rank = min_rank(air_time)) %>%
filter(rank %in% range(rank)) %>%
arrange(dest,rank)
flights %>%
filter(dest %in% best_dest$dest,
!is.na(air_time)) %>%
select(dest, carrier, air_time) %>%
group_by(dest, carrier) %>%
mutate(rank = min_rank(air_time)) %>%
filter(rank %in% range(rank)) %>%
arrange(dest,rank)
flights %>%
filter(dest == "ATL",
!is.na(air_time)) %>%
select(dest, carrier, air_time)
flights %>%
filter(dest == "ATL",
!is.na(air_time)) %>%
n_distinct(carrier)
flights %>%
filter(dest == "ATL",
!is.na(air_time)) %>%
count(carrier)
flights %>%
filter(dest == "ATL",
!is.na(air_time)) %>%
count(dest)
lights %>%
filter(dest == "ATL",
!is.na(air_time))
unique(atl$carrier)
flights %>%
filter(dest == "ATL") -> atl
unique(atl$carrier)
flights %>%
group_by(dest) %>%
summarise(
carriers = n_distinct(carrier)
) %>%
filter(carriers >= 2)
unique(atl$carrier)
flights %>%
filter(dest == "AUS") -> atl
unique(atl$carrier)
flights %>%
filter(dest %in% best_dest$dest,
!is.na(air_time)) %>%
select(dest, carrier, air_time) %>%
group_by(dest, carrier) %>%
summarise(rank = min_rank(air_time))
not_cancelled %>% # Recordemos que en este dataset no hay NAs en delays
group_by(carrier) %>%
mutate(rank = min_rank(dep_time)) %>%
filter(rank %in% range(rank))
flights %>%
filter(dest %in% best_dest$dest,
!is.na(air_time)) %>%
select(dest, carrier, air_time) %>%
group_by(dest, carrier)
flights %>%
filter(dest %in% best_dest$dest,
!is.na(air_time)) %>%
select(dest, carrier, air_time) %>%
group_by(dest, carrier) %>%
mutate(rank = min_rank(air_time))
flights %>%
filter(dest %in% best_dest$dest,
!is.na(air_time)) %>%
select(dest, carrier, air_time) %>%
group_by(dest, carrier) %>%
mutate(order = row_number()) %>%
arrange(dest,carrier,order)
flights %>%
filter(dest %in% best_dest$dest,
!is.na(air_time)) %>%
select(dest, carrier, air_time) %>%
group_by(dest) %>%
mutate(order = row_number()) %>%
arrange(dest,carrier,order)
flights %>%
filter(dest %in% best_dest$dest,
!is.na(air_time)) %>%
select(dest, carrier, air_time) %>%
group_by(dest, carrier) %>%
mutate(order = row_number(air_time)) %>%
arrange(dest,carrier,order)
flights %>%
filter(dest %in% best_dest$dest,
!is.na(air_time)) %>%
select(dest, carrier, air_time) %>%
arrange(dest,carrier,air_time)
flights %>%
filter(dest %in% best_dest$dest,
!is.na(air_time)) %>%
select(dest, carrier, air_time) %>%
group_by(dest, carrier) %>%
summarise(mean = mean(air_time))
flights %>%
filter(dest %in% best_dest$dest,
!is.na(air_time)) %>%
select(dest, carrier, air_time) %>%
group_by(dest, carrier) %>%
summarise(mean = mean(air_time)) %>%
mutate(order = row_number())
flights %>%
filter(dest %in% best_dest$dest,
!is.na(air_time)) %>%
select(dest, carrier, air_time) %>%
group_by(dest, carrier) %>%
summarise(mean = mean(air_time)) %>%
arrange(dest, air_time) %>%
mutate(order = row_number())
flights %>%
filter(dest %in% best_dest$dest,
!is.na(air_time)) %>%
select(dest, carrier, air_time) %>%
group_by(dest, carrier) %>%
summarise(mean = mean(air_time)) %>%
arrange(dest, mean) %>%
mutate(order = row_number())
# * Medidas de Posición
not_cancelled %>% # Recordemos que en este dataset no hay NAs en delays
group_by(carrier) %>%
mutate(rank = min_rank(dep_time)) %>%
filter(rank %in% range(rank)) # Ranking por compañías
flights %>%
group_by(tailnum) %>%
cumany(dep_delay > 60)
x <- c(1, 3, 5, 2, 2)
cumany(x == 3)
flights %>%
cumany(dep_delay > 60)
condicion = cumany(flights$dep_delay > 60)
condicion
flights %>%
group_by(tailnum) %>%
summarise(
n_hasta = count(condicion)
)
flights %>%
mutate(condicion = condicion)
flights %>%
mutate(condicion = condicion) %>%
group_by(tailnum) %>%
summarise(
n_hasta = count(condicion)
)
flights %>%
mutate(condicion = condicion) %>%
group_by(tailnum) %>%
summarise(
n_hasta = n(condicion)
)
flights %>%
mutate(condicion = condicion) %>%
group_by(tailnum, condicion) %>%
summarise(
n_hasta = n()
)
flights %>%
mutate(condicion = condicion) %>%
group_by(tailnum, condicion) %>%
summarise(
n_hasta = n()
) %>%
arrange(tailnum)
condicion = cumany(flights$dep_delay > 60)
table(condicon)
table(condicion)
falsos = which(condicion == FALSE)
condicion[falsos] = 1
condicion[!falsos] = 0
table(condicion)
falsos
condicion = cumany(flights$dep_delay > 60)
condicion
flights$dep_delay
flights %>%
arrange(year, month, day) %>%
group_by(tailnum) %>%
summarise(
n_hasta = cumany(dep_delay > 60)
) %>%
arrange(tailnum)
flights %>%
arrange(year, month, day) %>%
group_by(tailnum) %>%
summarise(
n_hasta = sum(1-cumany(dep_delay > 60))
) %>%
arrange(tailnum)
flights %>%
filter(!is.na(dep_delay)) %>%
arrange(year, month, day) %>%
group_by(tailnum) %>%
summarise(
n_hasta = sum(1-cumany(dep_delay > 60))
) %>%
arrange(tailnum)
flights %>%
select(tailnum, dep_delay) %>%
arrange(tail_num, dep_delay)
flights %>%
select(tailnum, dep_delay) %>%
arrange(tailnum, dep_delay)
flights %>%
filter(!is.na(dep_delay)) %>%
arrange(year, month, day) %>%
group_by(tailnum) %>%
summarise(
n_hasta = sum(cumany(dep_delay > 60))
) %>%
arrange(tailnum)
flights %>%
select(tailnum, dep_delay) %>%
arrange(tailnum, dep_delay)
flights %>%
filter(!is.na(dep_delay)) %>%
arrange(year, month, day) %>%
group_by(tailnum) %>%
summarise(
n_hasta = sum(1-cumany(dep_delay > 60))
) %>%
arrange(tailnum)
flights %>%
filter(!is.na(dep_delay)) %>%
arrange(year, month, day) %>%
group_by(tailnum) %>%
summarise(
n_hasta = sum(cumany(dep_delay > 60) == FALSE)
) %>%
arrange(tailnum)
flights %>%
select(year, month, day, tailnum, dep_delay) %>%
arrange(year, month, day, tailnum)
flights %>%
select(year, month, day, tailnum, dep_delay) %>%
arrange(tailnum, year, month, day)
flights %>%
filter(!is.na(dep_delay)) %>%
arrange(year, month, day) %>%
group_by(tailnum) %>%
summarise(
n_hasta = sum(cumany(dep_delay > 60) == FALSE)
) %>%
arrange(tailnum)
flights %>%
select(year, month, day, tailnum, dep_delay) %>%
arrange(tailnum, year, month, day)
